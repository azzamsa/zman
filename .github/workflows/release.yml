name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Publish for ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    env:
      CARGO: cargo
      # When CARGO is set to CROSS, this is set to `--target matrix.target`.
      TARGET_FLAGS:
      # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
      TARGET_DIR: ./target
      # Emit backtraces on panics.
      RUST_BACKTRACE: 1
    strategy:
      fail-fast: false
      matrix:
        build: [linux, linux-musl, macos, win-msvc, win-gnu]
        include:
        - build: linux
          os: ubuntu-22.04
          rust: stable
          target: x86_64-unknown-linux-gnu
          artifact_name: target/x86_64-unknown-linux-gnu/release/zman
          asset_name: zman-linux-amd64
          strip: true

        - build: linux-musl
          os: ubuntu-22.04
          rust: stable
          target: x86_64-unknown-linux-musl
          artifact_name: target/x86_64-unknown-linux-musl/release/zman
          asset_name: zman-linux-amd64-musl
          use-cross: true
          strip: true

        - build: macos
          os: macos-latest
          rust: stable
          target: x86_64-apple-darwin
          artifact_name: target/x86_64-apple-darwin/release/zman
          asset_name: zman-macos-amd64
          strip: true

        - build: win-msvc
          os: windows-2022
          rust: stable
          target: x86_64-pc-windows-msvc
          artifact_name: target/release/zman.exe
          # need to append `.exe` as the filename
          # used in relase page is `asset_name`
          asset_name: zman-windows-amd64-msvc.exe

        - build: win-gnu
          os: windows-2022
          rust: stable
          target: x86_64-pc-windows-gnu
          artifact_name: target/release/zman.exe
          asset_name: zman-windows-amd64-gnu.exe

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}

      - name: Install cross
        uses: taiki-e/install-action@cross

      - name: Use Cross
        # currently only used for non-windows
        # because they didn't pick up these variables
        run: |
          echo "CARGO=cross" >> $GITHUB_ENV
          echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
          echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV

      - name: Show command used for Cargo
        run: |
          echo "cargo command is: ${{ env.CARGO }}"
          echo "target flag is: ${{ env.TARGET_FLAGS }}"
          echo "target dir is: ${{ env.TARGET_DIR }}"

      - name: Build release binary
        run: ${{ env.CARGO }} build --verbose --release ${{ env.TARGET_FLAGS }}

      - name: Strip release binary (linux and macos)
        if: matrix.strip == true
        run: |
          strip "${{ matrix.artifact_name }}"

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ matrix.artifact_name }}
          asset_name: ${{ matrix.asset_name }}
          tag: ${{ github.ref }}
          overwrite: true
