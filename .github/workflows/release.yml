name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Publish for ${{ matrix.build }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - { build: linux-gnu,  os: ubuntu-22.04, target: x86_64-unknown-linux-gnu    }
          - { build: linux-musl, os: ubuntu-22.04, target: x86_64-unknown-linux-musl   }
          - { build: win-gnu,    os: windows-2022, target: x86_64-pc-windows-gnu       }
          - { build: win-msvc,   os: windows-2022, target: x86_64-pc-windows-msvc      }
          - { build: win32-msvc, os: windows-2022, target: i686-pc-windows-msvc        }
          - { build: macos,      os: macos-12    , target: x86_64-apple-darwin         }

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set the release version
        shell: bash
        run: echo "RELEASE_VERSION=${GITHUB_REF:11}" >> $GITHUB_ENV

      - name: Show release version
        shell: bash
        run: |
          echo ${{ env.RELEASE_VERSION }}

      - name: Install musl-tools
        if: matrix.target == 'x86_64-unknown-linux-musl'
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            --allow-unauthenticated musl-tools

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          target: ${{ matrix.target }}

      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Prepare release assets
        shell: bash
        run: |
          ./scripts/prepare-assets.sh ${{ matrix.os }} ${{ matrix.target }} ${{ env.RELEASE_VERSION }}

      - name: Create release artifacts
        shell: bash
        run: |
          ./scripts/compress-assets.sh ${{ matrix.os }} ${{ matrix.target }} ${{ env.RELEASE_VERSION }}

      - name: Upload the release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: zman-${{ env.RELEASE_VERSION }}-${{ matrix.target }}*
          file_glob: true
          overwrite: true
          tag: ${{ github.ref }}
          release_name: "v${{ env.RELEASE_VERSION }}"
